/*
 * eGov Property Registry System.
 * APIs for Property Registry module. This provide APIs for create new property, update existing property, search existing property. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@egovernments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
/**
 * Locality
 */

public class Locality {
  @JsonProperty("code")
  private String code = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("label")
  private String label = null;

  @JsonProperty("latitude")
  private String latitude = null;

  @JsonProperty("longitude")
  private String longitude = null;

  @JsonProperty("children")
  private List<Locality> children = null;

  @JsonProperty("materializedPath")
  private String materializedPath = null;

  public Locality code(String code) {
    this.code = code;
    return this;
  }

   /**
   * code of the boundary.
   * @return code
  **/
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Locality name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of the boundary.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Locality label(String label) {
    this.label = label;
    return this;
  }

   /**
   * localized label for the boundry.
   * @return label
  **/
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public Locality latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * latitude of the boundary.
   * @return latitude
  **/
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }

  public Locality longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * longitude of the boundary.
   * @return longitude
  **/
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }

  public Locality children(List<Locality> children) {
    this.children = children;
    return this;
  }

  public Locality addChildrenItem(Locality childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<Locality>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  public List<Locality> getChildren() {
    return children;
  }

  public void setChildren(List<Locality> children) {
    this.children = children;
  }

  public Locality materializedPath(String materializedPath) {
    this.materializedPath = materializedPath;
    return this;
  }

   /**
   * materialized path of the boundary - this would be of the format tenantid.[code] from parentt till teh current boundary
   * @return materializedPath
  **/
  public String getMaterializedPath() {
    return materializedPath;
  }

  public void setMaterializedPath(String materializedPath) {
    this.materializedPath = materializedPath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Locality locality = (Locality) o;
    return Objects.equals(this.code, locality.code) &&
        Objects.equals(this.name, locality.name) &&
        Objects.equals(this.label, locality.label) &&
        Objects.equals(this.latitude, locality.latitude) &&
        Objects.equals(this.longitude, locality.longitude) &&
        Objects.equals(this.children, locality.children) &&
        Objects.equals(this.materializedPath, locality.materializedPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, label, latitude, longitude, children, materializedPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Locality {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    materializedPath: ").append(toIndentedString(materializedPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
