/*
 * eGov Property Registry System.
 * APIs for Property Registry module. This provide APIs for create new property, update existing property, search existing property. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@egovernments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
/**
 * Property
 */

public class Property {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("propertyId")
  private String propertyId = null;
  
  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("tenantId")
  private String tenantId = null;

  @JsonProperty("surveyId")
  private String surveyId = null;

  @JsonProperty("accountId")
  private String accountId = null;

  @JsonProperty("oldPropertyId")
  private String oldPropertyId = null;

  @JsonProperty("status")
  private Status status = null;

  @JsonProperty("address")
  private Address address = null;

  @JsonProperty("acknowldgementIds")
  private String acknowldgementIds = null;

  @JsonProperty("propertyType")
  private String propertyType = null;

  @JsonProperty("ownershipCategory")
  private String ownershipCategory = null;

  @JsonProperty("owners")
  private List<OwnerInfo> owners = new ArrayList<OwnerInfo>();

  @JsonProperty("institution")
  private Institution institution = null;

  @JsonProperty("creationReason")
  private CreationReason creationReason = null;

  @JsonProperty("noOfFloors")
  private Long noOfFloors = null;

  @JsonProperty("landArea")
  private BigDecimal landArea = null;

  @JsonProperty("superBuiltUpArea")
  private BigDecimal superBuiltUpArea = null;

  @JsonProperty("source")
  private Source source = null;

  @JsonProperty("channel")
  private Channel channel = null;

  @JsonProperty("documents")
  private List<Document> documents = null;

  @JsonProperty("unit")
  private Unit unit = null;
  
  	@JsonProperty("units")
	private List<Unit> units;

  @JsonProperty("additionalDetails")
  private Object additionalDetails = null;
  

  @JsonProperty("totalConstructedArea")
  private BigDecimal totalConstructedArea = null;
  
  @JsonProperty("usageCategory")
  private String usageCategory = null;


  public Property id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique Identifier of the Property for internal reference.
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Property propertyId(String propertyId) {
    this.propertyId = propertyId;
    return this;
  }

   /**
   * Unique Identifier of the Property.
   * @return propertyId
  **/
  public String getPropertyId() {
    return propertyId;
  }

  public void setPropertyId(String propertyId) {
    this.propertyId = propertyId;
  }

  public Property tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * tenant id of the Property
   * @return tenantId
  **/
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public Property surveyId(String surveyId) {
    this.surveyId = surveyId;
    return this;
  }

   /**
   * survey id of the Property
   * @return surveyId
  **/
  public String getSurveyId() {
    return surveyId;
  }

  public void setSurveyId(String surveyId) {
    this.surveyId = surveyId;
  }

  public Property accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * UUID of the user to which the property will be associated
   * @return accountId
  **/
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public Property oldPropertyId(String oldPropertyId) {
    this.oldPropertyId = oldPropertyId;
    return this;
  }

   /**
   * Old upic no of the Property. ULBs have the existing property in their system/manual records with their identification number, they want to continue the old reference number in this case the same identification number will be captured here.
   * @return oldPropertyId
  **/
  public String getOldPropertyId() {
    return oldPropertyId;
  }

  public void setOldPropertyId(String oldPropertyId) {
    this.oldPropertyId = oldPropertyId;
  }

  public Property status(Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }

  public Property address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Property acknowldgementIds(String acknowldgementIds) {
    this.acknowldgementIds = acknowldgementIds;
    return this;
  }

   /**
   * Acknowldgement number given to citizen on submitting the application for creation or modification of the property.
   * @return acknowldgementIds
  **/
  public String getAcknowldgementIds() {
    return acknowldgementIds;
  }

  public void setAcknowldgementIds(String acknowldgementIds) {
    this.acknowldgementIds = acknowldgementIds;
  }

  public Property propertyType(String propertyType) {
    this.propertyType = propertyType;
    return this;
  }

   /**
   * Type of a property like Private, Vacant Land, State Government, Central Government etc.
   * @return propertyType
  **/
  public String getPropertyType() {
    return propertyType;
  }

  public void setPropertyType(String propertyType) {
    this.propertyType = propertyType;
  }

  public Property ownershipCategory(String ownershipCategory) {
    this.ownershipCategory = ownershipCategory;
    return this;
  }

   /**
   * The type of ownership of the property.
   * @return ownershipCategory
  **/
  public String getOwnershipCategory() {
    return ownershipCategory;
  }

  public void setOwnershipCategory(String ownershipCategory) {
    this.ownershipCategory = ownershipCategory;
  }

  public Property owners(List<OwnerInfo> owners) {
    this.owners = owners;
    return this;
  }

  public Property addOwnersItem(OwnerInfo ownersItem) {
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Property owners, these will be citizen users in system.
   * @return owners
  **/
  public List<OwnerInfo> getOwners() {
    return owners;
  }

  public void setOwners(List<OwnerInfo> owners) {
    this.owners = owners;
  }

  public Property institution(Institution institution) {
    this.institution = institution;
    return this;
  }

   /**
   * Get institution
   * @return institution
  **/
  public Institution getInstitution() {
    return institution;
  }

  public void setInstitution(Institution institution) {
    this.institution = institution;
  }

  public Property creationReason(CreationReason creationReason) {
    this.creationReason = creationReason;
    return this;
  }

   /**
   * Get creationReason
   * @return creationReason
  **/
  public CreationReason getCreationReason() {
    return creationReason;
  }

  public void setCreationReason(CreationReason creationReason) {
    this.creationReason = creationReason;
  }

  public Property noOfFloors(Long noOfFloors) {
    this.noOfFloors = noOfFloors;
    return this;
  }

   /**
   * no of floors in the property
   * @return noOfFloors
  **/
  public Long getNoOfFloors() {
    return noOfFloors;
  }

  public void setNoOfFloors(Long noOfFloors) {
    this.noOfFloors = noOfFloors;
  }

  public Property landArea(BigDecimal landArea) {
    this.landArea = landArea;
    return this;
  }

   /**
   * Land area of the property in sq ft
   * @return landArea
  **/
  public BigDecimal getLandArea() {
    return landArea;
  }

  public void setLandArea(BigDecimal landArea) {
    this.landArea = landArea;
  }

  public Property superBuiltUpArea(BigDecimal superBuiltUpArea) {
    this.superBuiltUpArea = superBuiltUpArea;
    return this;
  }

   /**
   * super builtup area of the complete property
   * @return superBuiltUpArea
  **/
  public BigDecimal getSuperBuiltUpArea() {
    return superBuiltUpArea;
  }

  public void setSuperBuiltUpArea(BigDecimal superBuiltUpArea) {
    this.superBuiltUpArea = superBuiltUpArea;
  }

  public Property source(Source source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  public Source getSource() {
    return source;
  }

  public void setSource(Source source) {
    this.source = source;
  }

  public Property channel(Channel channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  public Channel getChannel() {
    return channel;
  }

  public void setChannel(Channel channel) {
    this.channel = channel;
  }

  public Property documents(List<Document> documents) {
    this.documents = documents;
    return this;
  }

  public Property addDocumentsItem(Document documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Document>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * The documents attached by owner for exemption.
   * @return documents
  **/
  public List<Document> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Document> documents) {
    this.documents = documents;
  }

  public Property unit(Unit unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  public Unit getUnit() {
    return unit;
  }

  public void setUnit(Unit unit) {
    this.unit = unit;
  }

  public Property additionalDetails(Object additionalDetails) {
    this.additionalDetails = additionalDetails;
    return this;
  }

   /**
   * The json (array of &#x27;#/definitions/Factor&#x27;)
   * @return additionalDetails
  **/
  public Object getAdditionalDetails() {
    return additionalDetails;
  }

  public void setAdditionalDetails(Object additionalDetails) {
    this.additionalDetails = additionalDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Property property = (Property) o;
    return Objects.equals(this.id, property.id) &&
        Objects.equals(this.propertyId, property.propertyId) &&
        Objects.equals(this.tenantId, property.tenantId) &&
        Objects.equals(this.surveyId, property.surveyId) &&
        Objects.equals(this.accountId, property.accountId) &&
        Objects.equals(this.oldPropertyId, property.oldPropertyId) &&
        Objects.equals(this.status, property.status) &&
        Objects.equals(this.address, property.address) &&
        Objects.equals(this.acknowldgementIds, property.acknowldgementIds) &&
        Objects.equals(this.propertyType, property.propertyType) &&
        Objects.equals(this.ownershipCategory, property.ownershipCategory) &&
        Objects.equals(this.owners, property.owners) &&
        Objects.equals(this.institution, property.institution) &&
        Objects.equals(this.creationReason, property.creationReason) &&
        Objects.equals(this.noOfFloors, property.noOfFloors) &&
        Objects.equals(this.landArea, property.landArea) &&
        Objects.equals(this.superBuiltUpArea, property.superBuiltUpArea) &&
        Objects.equals(this.source, property.source) &&
        Objects.equals(this.channel, property.channel) &&
        Objects.equals(this.documents, property.documents) &&
        Objects.equals(this.unit, property.unit) &&
        Objects.equals(this.additionalDetails, property.additionalDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, propertyId, tenantId, surveyId, accountId, oldPropertyId, status, address, acknowldgementIds, propertyType, ownershipCategory, owners, institution, creationReason, noOfFloors, landArea, superBuiltUpArea, source, channel, documents, unit, additionalDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Property {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    surveyId: ").append(toIndentedString(surveyId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    oldPropertyId: ").append(toIndentedString(oldPropertyId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    acknowldgementIds: ").append(toIndentedString(acknowldgementIds)).append("\n");
    sb.append("    propertyType: ").append(toIndentedString(propertyType)).append("\n");
    sb.append("    ownershipCategory: ").append(toIndentedString(ownershipCategory)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    institution: ").append(toIndentedString(institution)).append("\n");
    sb.append("    creationReason: ").append(toIndentedString(creationReason)).append("\n");
    sb.append("    noOfFloors: ").append(toIndentedString(noOfFloors)).append("\n");
    sb.append("    landArea: ").append(toIndentedString(landArea)).append("\n");
    sb.append("    superBuiltUpArea: ").append(toIndentedString(superBuiltUpArea)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    additionalDetails: ").append(toIndentedString(additionalDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

public BigDecimal getTotalConstructedArea() {
	return totalConstructedArea;
}

public void setTotalConstructedArea(BigDecimal totalConstructedArea) {
	this.totalConstructedArea = totalConstructedArea;
}

public String getUsageCategory() {
	return usageCategory;
}

public void setUsageCategory(String usageCategory) {
	this.usageCategory = usageCategory;
}

public List<Unit> getUnits() {
	return units;
}

public void setUnits(List<Unit> units) {
	this.units = units;
}

public String getUuid() {
	return uuid;
}

public void setUuid(String uuid) {
	this.uuid = uuid;
}

}
